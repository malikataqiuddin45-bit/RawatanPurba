workflows:
  expo_debug_apk:
    name: Expo Debug APK (prebuild + gradle)
    max_build_duration: 60
    instance_type: linux_x2
    environment:
      node: 20
      npm: 9
      java: 17
      vars:
        EXPO_NO_INTERACTIVE: "true"
        NODE_ENV: "development"
    scripts:
      - name: Install dependencies
        script: |
          echo "Node: $(node -v) | NPM: $(npm -v)"
          npm ci || npm install
      - name: Ensure icons (avoid prebuild icon errors)
        script: |
          mkdir -p assets
          [ -f assets/icon.png ] || curl -sL -o assets/icon.png https://cdn.jsdelivr.net/gh/expo/expo@main/templates/expo-template-bare-minimum/assets/icon.png
          [ -f assets/adaptive-icon.png ] || curl -sL -o assets/adaptive-icon.png https://cdn.jsdelivr.net/gh/expo/expo@main/templates/expo-template-bare-minimum/assets/adaptive-icon.png
      - name: Expo prebuild (android only)
        script: |
          npx expo prebuild --platform android --clean --non-interactive
      - name: OPTIONAL ‚Äì bundle JS in Debug (run without Metro)
        script: |
          FILE=android/app/build.gradle
          grep -q "bundleInDebug" "$FILE" || \
          sed -i '1s;^;project.ext.react = [ bundleInDebug: true ]\n;' "$FILE"
      - name: Build Debug APK
        script: |
          cd android
          chmod +x gradlew
          ./gradlew --no-daemon assembleDebug --stacktrace
          cd ..
      - name: Collect artifact (auto-detect)
        script: |
          echo "üîç Searching for APK output..."
          APK_PATH=$(find android/app/build/outputs -type f -name "*.apk" | head -n 1)
          if [ -z "$APK_PATH" ]; then
            echo "‚ùå Tiada APK dijumpai, semak build.gradle"
            exit 1
          fi
          echo "‚úÖ Jumpa APK di: $APK_PATH"
          mkdir -p build
          cp "$APK_PATH" build/forensik-debug.apk
          echo "‚úÖ Disalin ke build/forensik-debug.apk"
